{"version":3,"sources":["hooks/userReducer.js","hooks/useInputsUpdate.js","components/TableUsers.js","components/CreateUser.js","App.js","hooks/useFormAdd.js","index.js"],"names":["userReducer","state","action","type","payload","filter","user","id","map","name","inputName","email","inputEmail","useInputsUpdate","valuesInputs","setValuesInputs","dispatch","useState","edit","setEdit","idCurrent","setIdCurrent","handleDelete","userId","handleEdit","handleUpdate","handleChangeEdit","target","value","TableUsers","users","className","i","key","onChange","defaultValue","disabled","onClick","CreateUser","handleSubmit","handleChange","formValues","onSubmit","placeholder","init","localStorage","getItem","JSON","parse","App","useReducer","useEffect","setItem","stringify","setFormValues","reset","e","preventDefault","trim","Date","getTime","useFormAdd","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8ec9845c.chunk.js","sourcesContent":["export const userReducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"delete\":\n      return state.filter((user) => user.id !== action.payload);\n    case \"update\":\n      return state.map((user) =>\n        user.id === action.payload.id\n          ? {\n              id: user.id,\n              name:\n                action.payload.inputName === \"\"\n                  ? user.name\n                  : action.payload.inputName,\n              email:\n                action.payload.inputEmail === \"\"\n                  ? user.email\n                  : action.payload.inputEmail,\n            }\n          : user\n      );\n    default:\n      return state;\n  }\n};\n","import { useState } from \"react\";\n\nexport const useInputsUpdate = (valuesInputs, setValuesInputs, dispatch) => {\n  const { inputName, inputEmail } = valuesInputs;\n  const [edit, setEdit] = useState(false);\n  const [idCurrent, setIdCurrent] = useState(null);\n  const handleDelete = (userId) => {\n    dispatch({ type: \"delete\", payload: userId });\n    setEdit(!edit);\n  };\n  const handleEdit = (userId) => {\n    if (edit === false) {\n      setIdCurrent(userId);\n      setEdit(!edit);\n    }\n  };\n  const reset = () => {\n    setValuesInputs({\n      inputEmail: \"\",\n      inputName: \"\",\n    });\n  };\n  const handleUpdate = (user) => {\n    dispatch({\n      type: \"update\",\n      payload: { id: user.id, inputName, inputEmail },\n    });\n    setEdit(!edit);\n    reset();\n  };\n\n  const handleChangeEdit = ({ target }) => {\n    setValuesInputs({\n      ...valuesInputs,\n      [target.name]: target.value,\n    });\n  };\n  return {\n    idCurrent,\n    edit,\n    handleDelete,\n    handleEdit,\n    handleUpdate,\n    handleChangeEdit,\n  };\n};\n","import React from \"react\";\n\nimport { useInputsUpdate } from \"../hooks/useInputsUpdate\";\n\nconst TableUsers = ({ users, valuesInputs, setValuesInputs, dispatch }) => {\n  const {\n    idCurrent,\n    edit,\n    handleDelete,\n    handleEdit,\n    handleUpdate,\n    handleChangeEdit,\n  } = useInputsUpdate(valuesInputs, setValuesInputs, dispatch);\n\n  return (\n    <>\n      <h1>CRUD usuarios localstorage</h1>\n      <hr />\n      <h2>Lista de usuarios</h2>\n      <div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Nombre</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user, i) => (\n              <tr key={user.id}>\n                <td>{user.id}</td>\n                <td>\n                  {edit && user.id === idCurrent ? (\n                    <input\n                      type=\"text\"\n                      onChange={handleChangeEdit}\n                      name=\"inputName\"\n                      defaultValue={user.name}\n                    />\n                  ) : (\n                    user.name\n                  )}\n                </td>\n                <td>\n                  {edit && user.id === idCurrent ? (\n                    <input\n                      type=\"text\"\n                      name=\"inputEmail\"\n                      onChange={handleChangeEdit}\n                      defaultValue={user.email}\n                    />\n                  ) : (\n                    user.email\n                  )}\n                </td>\n\n                <td>\n                  <button\n                    disabled={false}\n                    onClick={\n                      edit && user.id === idCurrent\n                        ? () => handleUpdate(user)\n                        : () => handleEdit(user.id)\n                    }\n                    className={\n                      edit && user.id === idCurrent\n                        ? \"btn btn-success\"\n                        : \"btn btn-warning\"\n                    }\n                  >\n                    {edit && user.id === idCurrent ? \"Actualizar\" : \"Editar\"}\n                  </button>\n                  <button\n                    onClick={() => handleDelete(user.id)}\n                    className=\"btn btn-danger\"\n                  >\n                    Eliminar\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default TableUsers;\n","import React from \"react\";\n\nconst CreateUser = ({ handleSubmit, handleChange, formValues }) => {\n  const { name, email } = formValues;\n  return (\n    <div>\n      <h2>Crear usuario</h2>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Nombre\"\n          name=\"name\"\n          className=\"form-control mt-2\"\n          onChange={handleChange}\n          value={name}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Correo electrÃ³nico\"\n          name=\"email\"\n          className=\"form-control mt-2\"\n          onChange={handleChange}\n          value={email}\n        />\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\n          Agregar\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateUser;\n","import React, { useEffect, useReducer, useState } from \"react\";\n\nimport { userReducer } from \"./hooks/userReducer\";\nimport { useForm as useFormAdd } from \"./hooks/useFormAdd\";\nimport TableUsers from \"./components/TableUsers\";\nimport CreateUser from \"./components/CreateUser\";\n\nconst init =\n  localStorage.getItem(\"users\") !== null\n    ? JSON.parse(localStorage.getItem(\"users\"))\n    : [];\n\nconst App = () => {\n  const [users, dispatch] = useReducer(userReducer, init);\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const [formValues, setFormValues] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n  });\n\n  const [valuesInputs, setValuesInputs] = useState({\n    inputName: \"\",\n    inputEmail: \"\",\n  });\n\n  const { handleSubmit, handleChange } = useFormAdd(\n    formValues,\n    dispatch,\n    setFormValues\n  );\n\n  return (\n    <div className=\"container mt-5\">\n      <TableUsers\n        users={users}\n        valuesInputs={valuesInputs}\n        setValuesInputs={setValuesInputs}\n        dispatch={dispatch}\n      />\n      <CreateUser\n        formValues={formValues}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export const useForm = (formValues, dispatch, setFormValues) => {\n  const { name, email } = formValues;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() <= 1) {\n      return;\n    }\n    if (email.trim() <= 1) {\n      return;\n    }\n    dispatch({\n      type: \"add\",\n      payload: formValues,\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setFormValues({ name: \"\", email: \"\" });\n  };\n\n  const handleChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      id: new Date().getTime(),\n      [target.name]: target.value,\n    });\n  };\n  return { handleSubmit, reset, handleChange };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./app.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}